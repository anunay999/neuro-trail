
services:
  # FastAPI Backend
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/neurotrail
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - LLM_PROVIDER=ollama
      - LLM_MODEL=mistral
      - LLM_BASE_URL=http://ollama:11434
      - EMBEDDER_PROVIDER=ollama
      - EMBEDDER_MODEL=nomic-embed-text
      - EMBEDDER_BASE_URL=http://ollama:11434
      - VECTOR_STORE_PROVIDER=chroma
      - VECTOR_STORE_HOST=chroma
      - VECTOR_STORE_PORT=8000
      - PLUGINS_DIR=/app/app/plugins
      - UPLOAD_DIR=/app/.data/uploads
      - TEMP_DIR=/app/.data/temp
    volumes:
      - ./backend:/app
      - backend_data:/app/.data
    depends_on:
      - postgres
      - neo4j
      - chroma
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Streamlit Frontend
  frontend:
    build: ./frontend
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://backend:8000/api
    volumes:
      - ./frontend/streamlit:/app
    depends_on:
      - backend
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=neurotrail
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    volumes:
      - neo4j_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1;"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB Vector Store
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    ports:
      - "8100:8000"
    volumes:
      - chroma_data:/chroma/chroma
    restart: unless-stopped
    environment:
      - ALLOW_RESET=true
      - ANONYMIZED_TELEMETRY=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
  neo4j_data:
  chroma_data:
  backend_data:

networks:
  host:
    name: host
    external: true
